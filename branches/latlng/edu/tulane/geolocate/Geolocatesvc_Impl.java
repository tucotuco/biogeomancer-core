/**
 * Copyright 2007 University of California at Berkeley.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */

// This class was generated by the JAXRPC SI, do not edit.
// Contents subject to change without notice.
// JAX-RPC Standard Implementation (1.1.3, build R1)
// Generated source version: 1.1.3
package edu.tulane.geolocate;

import javax.xml.namespace.QName;
import javax.xml.rpc.JAXRPCException;

import com.sun.xml.rpc.client.HandlerChainImpl;
import com.sun.xml.rpc.client.ServiceExceptionImpl;
import com.sun.xml.rpc.util.exception.LocalizableExceptionAdapter;

public class Geolocatesvc_Impl extends com.sun.xml.rpc.client.BasicService
    implements Geolocatesvc {
  private static final QName serviceName = new QName(
      "http://www.museum.tulane.edu/webservices/", "geolocatesvc");
  private static final QName ns1_geolocatesvcSoap_QNAME = new QName(
      "http://www.museum.tulane.edu/webservices/", "geolocatesvcSoap");
  private static final Class geolocatesvcSoap_PortClass = edu.tulane.geolocate.GeolocatesvcSoap.class;

  public Geolocatesvc_Impl() {
    super(serviceName, new QName[] { ns1_geolocatesvcSoap_QNAME },
        new edu.tulane.geolocate.Geolocatesvc_SerializerRegistry()
            .getRegistry());

  }

  public edu.tulane.geolocate.GeolocatesvcSoap getGeolocatesvcSoap() {
    java.lang.String[] roles = new java.lang.String[] {};
    HandlerChainImpl handlerChain = new HandlerChainImpl(getHandlerRegistry()
        .getHandlerChain(ns1_geolocatesvcSoap_QNAME));
    handlerChain.setRoles(roles);
    edu.tulane.geolocate.GeolocatesvcSoap_Stub stub = new edu.tulane.geolocate.GeolocatesvcSoap_Stub(
        handlerChain);
    try {
      stub._initialize(super.internalTypeRegistry);
    } catch (JAXRPCException e) {
      throw e;
    } catch (Exception e) {
      throw new JAXRPCException(e.getMessage(), e);
    }
    return stub;
  }

  public java.rmi.Remote getPort(java.lang.Class serviceDefInterface)
      throws javax.xml.rpc.ServiceException {
    try {
      if (serviceDefInterface.equals(geolocatesvcSoap_PortClass)) {
        return getGeolocatesvcSoap();
      }
    } catch (Exception e) {
      throw new ServiceExceptionImpl(new LocalizableExceptionAdapter(e));
    }
    return super.getPort(serviceDefInterface);
  }

  public java.rmi.Remote getPort(javax.xml.namespace.QName portName,
      java.lang.Class serviceDefInterface)
      throws javax.xml.rpc.ServiceException {
    try {
      if (portName.equals(ns1_geolocatesvcSoap_QNAME)
          && serviceDefInterface.equals(geolocatesvcSoap_PortClass)) {
        return getGeolocatesvcSoap();
      }
    } catch (Exception e) {
      throw new ServiceExceptionImpl(new LocalizableExceptionAdapter(e));
    }
    return super.getPort(portName, serviceDefInterface);
  }
}
