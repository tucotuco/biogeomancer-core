/**
 * Copyright 2007 University of California at Berkeley.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */

// This class was generated by the JAXRPC SI, do not edit.
// Contents subject to change without notice.
// JAX-RPC Standard Implementation (1.1.3, build R1)
// Generated source version: 1.1.3
package edu.tulane.geolocate;

public interface GeolocatesvcSoap extends java.rmi.Remote {
  public edu.tulane.geolocate.ArrayOfString findWaterBodiesWithinLocality(
      edu.tulane.geolocate.LocalityDescription localityDescription)
      throws java.rmi.RemoteException;

  public edu.tulane.geolocate.Georef_Result_Set georef(
      edu.tulane.geolocate.LocalityDescription localityDescription,
      boolean hwyX, boolean findWaterbody) throws java.rmi.RemoteException;

  public edu.tulane.geolocate.Georef_Result_Set georef2(
      java.lang.String country, java.lang.String state,
      java.lang.String county, java.lang.String localityString, boolean hwyX,
      boolean findWaterbody) throws java.rmi.RemoteException;

  public edu.tulane.geolocate.Georef_Result_Set georef3(
      java.lang.String vLocality, java.lang.String vGeography, boolean hwyX,
      boolean findWaterbody) throws java.rmi.RemoteException;

  public edu.tulane.geolocate.GeographicPoint snapPointToNearestFoundWaterBody(
      edu.tulane.geolocate.LocalityDescription localityDescription,
      edu.tulane.geolocate.GeographicPoint WGS84Coordinate)
      throws java.rmi.RemoteException;

  public edu.tulane.geolocate.GeographicPoint snapPointToNearestFoundWaterBody2(
      java.lang.String country, java.lang.String state,
      java.lang.String county, java.lang.String localityString,
      double WGS84Latitude, double WGS84Longitude)
      throws java.rmi.RemoteException;
}
