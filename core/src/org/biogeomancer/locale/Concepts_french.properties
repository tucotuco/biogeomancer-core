# Units_french.properties
# Created 2006-July-25

# !---------------------------------------------------!
# Combined French and English property files
# This is to allow for mixed language databases

# !---------------------------------------------------!
# FRENCH UNITS
#
# Matches:
units.meter.matches = m[.]?; m[èe]tre[s]?; meter[s]?; mts[.]?; metre[s]?
units.foot.matches = pd[s]?[.]?; pied[s]?; ft[.]?; foot; feet 
units.mile.matches = mi[s]?[.]?; mille[s]?; mi[ ]?[s]?[.]?; mile[s]?
units.yard.matches = yd[s]?[.]?; yard[s]?
units.kilometer.matches = km[s]?[.]?; kilom[èe]tre[s]?; kilometer[s]?; kilometre[s]?
units.nauticalmile.matches = mn[.]?; mille[s]? nautique[s]?; nm[s]?[.]?; nautical mile[s]?; nauticalmile[s]?
units.fathom.matches = br[.]?; brasse[s]?; fth[s]?[.]?; fath[.]?; fathom[s]?
#
# Accepted, spelled-out version:
units.meter.accepted = m[èe]tres; meters
units.foot.accepted = pieds; feet
units.mile.accepted = milles; miles
units.yard.accepted = yards
units.kilometer.accepted = kilom[èe]tres; kilometers
units.nauticalmile.accepted = milles nautiques; nautical mile
units.fathom.accepted = brasses; fathoms
#
# Abbreviations
units.meter.abbreviation = m
units.foot.abbreviation = pd; ft
units.mile.abbreviation = mi
units.yard.abbreviation = yd
units.kilometer.abbreviation = km
units.nauticalmile.abbreviation = mn; nm
units.fathom.abbreviation = br; fth

# !---------------------------------------------------!
# FRENCH HEADINGS
#
# Matches:
headings.n.matches = N[.]?; Nord; North
headings.e.matches = E[.]?; Est; East
headings.s.matches = S[.]?; Sud; South
headings.w.matches = O[.]?; W[.]?; Ouest; West
headings.ne.matches = N[.]?E[.]?; Nord-est; Nordest; Northeast; North-east
headings.se.matches = S[.]?E[.]?; Sud-est; Sudest; Southeast; South-east
headings.sw.matches = S[.]?O[.]?; S[.]?W[.]?; Sud-ouest; Sudouest; Southwest; South-west
headings.nw.matches = N[.]?O[.]?; N[.]?W[.]?; Nord-ouest; Nordouest; Northwest; North-west
headings.nne.matches = N[.]?N[.]?E[.]?; Nord-nord-est; Nord-nordest; North-Northeast
headings.ene.matches = E[.]?N[.]?E[.]?; Est-nord-est; Est-nordest; East-Northeast
headings.ese.matches = E[.]?S[.]?E[.]?; Est-sud-est; Est-sudest; East-Southeast
headings.sse.matches = S[.]?S[.]?E[.]?; Sud-sud-est; Sud-sudest; South-Southeast
headings.ssw.matches = S[.]?S[.]?O[.]?; S[.]?S[.]?W[.]?; Sud-sud-ouest; Sud-sudouest; South-Southwest
headings.wsw.matches = O[.]?S[.]?O[.]?; W[.]?S[.]?W[.]?; Ouest-sud-ouest; Ouest-sudeouest; West-Southwest
headings.wnw.matches = O[.]?N[.]?O[.]?; W[.]?N[.]?W[.]?; Ouest-nord-ouest; Ouest-nordouest; West-Northwest
headings.nnw.matches = N[.]?N[.]?O[.]?; N[.]?N[.]?W[.]?; Nord-nord-ouest; Nord-nordouest; North-Northwest
#
# Accepted, spelled-out version:
headings.n.accepted = Nord; North
headings.e.accepted = Est; East
headings.s.accepted = Sud; South
headings.w.accepted = Ouest; West
headings.ne.accepted = Nord-est; North-east
headings.se.accepted = Sud-est; South-east
headings.sw.accepted = Sud-ouest; South-west
headings.nw.accepted = Nord-ouest; North-west
headings.nne.accepted = Nord-nord-est; North-northeast
headings.ene.accepted = Est-nord-est; East-northeast
headings.ese.accepted = Est-sud-est; East-southeast
headings.sse.accepted = Sud-sud-est; South-southeast
headings.ssw.accepted = Sud-sud-ouest; South-southwest
headings.wsw.accepted = Ouest-sud-ouest; West-southwest
headings.wnw.accepted = Ouest-nord-ouest; West-northwest
headings.nnw.accepted = Nord-nord-ouest; North-northwest
#
# Abbreviations:
headings.n.abbreviation = N
headings.e.abbreviation = E
headings.s.abbreviation = S
headings.w.abbreviation = O; W
headings.ne.abbreviation = NE
headings.se.abbreviation = SE
headings.sw.abbreviation = SO; SW
headings.nw.abbreviation = NO; NW
headings.nne.abbreviation = NNE
headings.ene.abbreviation = ENE
headings.ese.abbreviation = ESE
headings.sse.abbreviation = SSE
headings.ssw.abbreviation = SSO; SSW
headings.wsw.abbreviation = OSO; WSW
headings.wnw.abbreviation = ONO; WNW
headings.nnw.abbreviation = NNO; NNW

# !--------------------------------------------------!
# FRENCH Regular Expressions
#
regx_AND = (\\s(Et|ET|et|&)\\s)|(\\s(And|AND|and|&)\\s)
regx_OF = ((\\s|^)(DE|de|De|du|Du|DU)($|\\s)((LE|Le|le|LA|la|La)\\s)?|(\\s|^)(OF|of|Of)($|\\s)((THE|The|the)\\s)?)
regx_BY_RD = (\\s(PAR|par|Par)($|\\s)(LA|la|La)($|\\s)(ROUTE|route|Rte|rte|Route|Rn|rn|RN|)\\s)|(\\s(BY ROAD|BY ROAD|by road|by rd|by Rd)\\s)
regx_BF = ((ENTRE|AU-DESSUS|AU-DESSOUS|DE)\\s((DU|DE)\\s)?((LA|LE)\\s)?.+\\s(ET|AU-DESSUS|AU-DESSOUS|AU)\\s((DU|DE)\\s)?((LA|LE)\\s)?.+)((BETWEEN\\s.+\\sAND\\s.+)|(FROM\\s.+\\sTO\\s.+)|(ABOVE\\s.+\\sBELOW\\s.+)|(BELOW\\s.+\\sABOVE\\s.+))
regx_NF_NJ_NPOM = (((([àa]|A|AU|Au|EN|)(\\s|-))?(PROX.|PROX|PROXIMIT[ÉE]|PR[ÉE]S|PROCHE|SORTANT|SECTEUR|DESSUS|DESSOUS|LOIN|OUTRE)((\\s)(DE|de|De|du|Du|DU))?\\s.+)|(.+\\s(PROX.|PROX|PROXIMIT[ÉE]|SECTEUR)))|(((VIC.|VICINITY|NEAR|AREA|ABOVE|BELOW|OFF)\\s.+)|(.+\\s(VIC.|VICINITY|AREA)))
regx_J = ((JCT.|JCT|JONCTION|INTERSECTION|CONFLUENT|CROISEMENT|)($|\\s)(DE|de|De|du|Du|DU)\\s.+\\s(Et|ET|et|&)($|\\s)(DE|de|De|du|Du|DU)\\s.+)|((JCT.|JCT|JUNCTION|CONFLUENCE|INTERSECTION)\\s.+\\sAND\\s.+)
regx_FS = (((CENTRE|BOUCHE|EMBOUCHURE|RESSORTS|SOURCE|RESSORTS)\\s(DE|de|De|du|Du|DU)($|\\s)((LE|Le|le|LA|la|La)\\s.+)|.+\\s(PARTIE|FAIT PARTIE)\\s(DE|de|De|du|Du|DU)($|\\s)((LE|Le|le|LA|la|La)\\s.+)|(CENTRAL|CENTRALE|NORDIQUE|M[ÉE]RIDIONAL|M[ÉE]RIDIONALE|ORIENTAL|ORIENTALE|OCCIDENTAL|OCCIDENTALE)\\s.+|.+\\s(BOUCHE|RESSORTS|SOURCE|RESSORTS|EMBOUCHURE)))|((CENTER|MOUTH|HEADWATERS|HEAD)\\sOF\\s.+)|(.+\\sPART\\sOF\\s.+)|(((CENTRAL|NORTHERN|SOUTHERN|EASTERN|WESTERN)\\s.+)|(.+\\s(MOUTH|HEAD|HEADWATERS)))
regx_NN = INCONNU|(UNKNOWN)
regx_JH_NJ = (.+(JCT.|JCT|JONCTION|INTERSECTION|CONFLUENT|CROISEMENT|)($|\\s)(DE|de|De|du|Du|DU)\\s.+\\s(Et|ET|et|&)\\s.+)|(.+(JCT.|JCT|JUNCTION|CONFLUENCE|INTERSECTION)\\s.+\\sAND\\s.+)
regx_TRS = (T|TOWNSHIP)\\s?\\d+\\s?(S|N)(\\s|,|,\\s)(R|RANGE)\\s?\\d+\\s?(E|W)(\\s|,|,\\s)(S|SEC|SEC.|SECTION)\\s?\\d+
regx_TRSS = DUMMY
regx_UTM = (ZONE|Z)\\s?\\d+(,|\\s|,\\s)\\d+\\s?[EWew](,|\\s|,\\s)\\d+\\s?[snSN]
regx_Q = (.+\\s(CARTE|FEUILLE DE CARTE|FEUILLE))|(.+\\s(QUAD|QUAD SHEET|MAP))
regx_PBF = (.+\\s(DE|de|De|du|Du|DU|ENTRE|entre|Entre)\\s.+\\s([àa]|A|AU|Au|Et|ET|et|&)\\s.+)|(.+\\s(FROM|BETWEEN)\\s.+\\s(TO|AND)\\s.+)
regx_FOP = (.*\\s(VERS LE HAUT|DE|SUR|LE LONG)($|\\s)(DE|de|De|du|Du|DU)\\s.+\\s(SUR|LE LONG|DE)($|\\s)(DE|de|De|du|Du|DU)\\s.+)|(.*\\s(UP|FROM|ON|ALONG)\\s.+\\s(ON|ALONG|FROM)\\s.+)
regx_JO = (.*\\s(VERS LE HAUT|DE|SUR|LE LONG)($|\\s)(DE|de|De|du|Du|DU)\\s.+\\s(DE|SUR|LE LONG)($|\\s)(DE|de|De|du|Du|DU)\\s.+)|(.*\\s(UP|FROM|ON|ALONG)\\s.+\\s(ON|ALONG|FROM)\\s.+)
regx_FPOH_JPOH = (.+(\\sSUR($|\\s)(LE|Le|le|LA|la|La)\\s|\\sLE LONG($|\\s(DE|de|De|du|Du|DU)\\s)|\\s(PAR|par|Par)($|\\s)(LA|la|La)($|\\s)(ROUTE|route|Rte|rte|Route|Rn|rn|RN|)\\s).+)|(.+(\\sON\\s|\\sALONG\\s|\\sBY\\sROAD\\s).+)
regx_HEADING_EW = (E|EST|O|OUEST)|(E|EAST|W|WEST)
regx_TRSS_MASK =  [^0-9]+
regx_BF_MASK = (((\\s)?(ENTRE|entre|Entre|Au[-\\s]Dessus|au[-\\s]dessus|AU[-\\s]DESSUS|Au[-\\s]Dessous|au[-\\s]dessous|AU[-\\s]DESSOUS|DE|De|de)(\\s(De|DE|Du|DU|de|du))?(\\s(LA|La|la|LE|Le|le))?|(\\sAU|\\sAu|\\sau|\\sEt|\\set|\\sET)(\\s(De|DE|Du|DU|de|du))?(\\s(LA|La|la|LE|Le|le))?)\\s)|((BETWEEN|Between|between|FROM|From|from|BELOW|Below|below|ABOVE|Above|above|\\sBELOW|\\sBelow|\\sbelow|\\sABOVE|\\sAbove|\\sabove|\\sAnd|\\sand|\\sAND|\\sTO|\\sTo|\\sto)\\s)
regx_FO_MASK = (\\s[a-z,\\s]+\\s)|(\\s[a-z,\\s]+\\s)
regx_FOP_MASK = (\\s(VERS LE HAUT|DE|De|de|SUR|Sur|sur|LE LONG)($|\\s)(DE|de|De|du|Du|DU)\\s)|(\\s(UP|Up|up|FROM|ON|On|From|from|on)\\s)
regx_J_MASK = ((\\s|^)(JCT.|JCT|JONCTION|INTERSECTION|CONFLUENT|CROISEMENT|ET|Jct.|Jct|Jonction||Intersection|Confluent|Croisement|Et|jct.|jct|jonction||intersection|confluent|croisement|et)\\s)|((\\s|^)(JCT.|JCT|JUNCTION|CONFLUENCE|INTERSECTION|AND|Jct.|Jct|Junction|Confluence|Intersection|And|jct.|jct|junction|confluence|intersection|and)\\s)
regx_FPOH_MASK = (\\s(SUR|LE LONG DE|PAR\\sLA ROUTE|Sur|Le long de|Par\\sLa route|sur|le long de|par\\sla route\\sroad)\\s)|(\\s(ON|ALONG|BY\\sROAD|On|Along|By\\sRoad|on|along|by\\sroad)\\s)
regx_JPOH_MASK = ((JCT.|JCT|JUNCTION|CONFLUENCE|INTERSECTION|\\sAND|Jct.|Jct|Junction|Confluence|Intersection|\\sAnd|jct.|jct|junction|confluence|intersection|\\sand|\\sON|\\sALONG|\\sOn|\\sAlong|\\son|\\salong)\\s)|((JCT.|JCT|JUNCTION|CONFLUENCE|INTERSECTION|\\sAND|Jct.|Jct|Junction|Confluence|Intersection|\\sAnd|jct.|jct|junction|confluence|intersection|\\sand|\\sON|\\sALONG|\\sOn|\\sAlong|\\son|\\salong)\\s)
regx_NEAR_MASK = ((^|\\s)((au|Au|AU|[àa])(\\s|-))?(prox\.|proximit[èe]|proche|pr[èe]s|secteur|dessus|dessous|outre|sortant|PROX\.|PROXIMIT[ÉE]|PROCHE|PR[ÉE]S|SECTEUR|DESSUS|DESSOUS|OUTRE|SORTANT|Prox\.|Proximit[èe]|Proche|Pr[èe]s|Secteur|Dessus|Dessous|Outre|Sortant)($|\\s)((DE|de|De|du|Du|DU)($|\\s))?((la|La|LA|le|Le|LE)($|\\s))?)|((^|\\s|,\\s|,)(vic.|vicinity|near|area|above|below|off|VIC.|VICINITY|NEAR|AREA|ABOVE|BELOW|OFF|VIC.|VICINITY|AREA|Vic.|Vicinity|Near|Area|Above|Below|Off)($|\\s))
regx_PBF_MASK = ((\\s(DE|ENTRE|[àa]|ET|de|entre|[àa]|et|De|Entre|[àa]|Et)\\s)|&)|((\\s(FROM|BETWEEN|TO|AND|and|from|between|to|And|From|Between|To)\\s)|&)
regx_FS_MASK = (CENTRAL|CENTRALE|NORDIQUE|M[ÉE]RIDIONAL|M[ÉE]RIDIONALE|ORIENTAL|ORIENTALE|OCCIDENTAL|OCCIDENTALE|BOUCHE|EMBOUCHURE|RESSORTS|SOURCE|RESSORTS)|(CENTRAL|NORTHERN|SOUTHERN|EASTERN|WESTERN|MOUTH|HEAD|HEADWATERS)
regx_FOH_MASK = 
regx_SUB_MASK = PARTE DE|PARTE DU
# !--------------------------------------------------!
# FRENCH keywords
#
keyword_AND = ET|AND
keyword_OF = DE|DU|DE LA|OF
keyword_BY_RD = PAR LA ROUTE|SUR LA ROUTE|BY ROAD